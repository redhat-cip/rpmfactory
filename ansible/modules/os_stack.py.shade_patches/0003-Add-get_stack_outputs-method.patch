From 7b83aa7279c5a6ca608c76a705b526361bed34a8 Mon Sep 17 00:00:00 2001
From: Tristan Cacqueray <tdecacqu@redhat.com>
Date: Thu, 4 Feb 2016 16:56:38 -0500
Subject: [PATCH 3/3] Add get_stack_outputs method

This change adds a new Task to retrieve a stack output.
Using output_list or output_show is not portable and the python-heatclient
automatically fallback to using get in order to fetch stack output.

Change-Id: Ia3a94c81721e5bef3840a4f934f4e28dd50d8b57
---
 shade/_tasks.py                |  5 +++++
 shade/openstackcloud.py        |  9 +++++++++
 shade/tests/fakes.py           |  4 +++-
 shade/tests/unit/test_stack.py | 12 ++++++++++++
 4 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/shade/_tasks.py b/shade/_tasks.py
index 8cd5466..a6dbfe1 100644
--- a/shade/_tasks.py
+++ b/shade/_tasks.py
@@ -707,6 +707,11 @@ class StackCreate(task_manager.Task):
         return client.heat_client.stacks.create(**self.args)
 
 
+class StackOutputsGet(task_manager.Task):
+    def main(self, client):
+        return client.heat_client.stacks.get(self.args['id'])
+
+
 class StackDelete(task_manager.Task):
     def main(self, client):
         return client.heat_client.stacks.delete(self.args['id'])
diff --git a/shade/openstackcloud.py b/shade/openstackcloud.py
index 563bcaf..c299a25 100644
--- a/shade/openstackcloud.py
+++ b/shade/openstackcloud.py
@@ -1585,6 +1585,15 @@ class OpenStackCloud(object):
         """
         return _utils._get_entity(self.search_floating_ips, id, filters)
 
+    def get_stack_outputs(self, id):
+        """Get a stack outputs.
+
+        :param id: id of the desired stack.
+
+        :returns: a dict containing the stack and its outputs description
+        """
+        return self.manager.submitTask(_tasks.StackOutputsGet(id=id))
+
     def get_stack(self, name_or_id, filters=None):
         """Get exactly one Heat stack.
 
diff --git a/shade/tests/fakes.py b/shade/tests/fakes.py
index e25332e..71f562c 100644
--- a/shade/tests/fakes.py
+++ b/shade/tests/fakes.py
@@ -208,9 +208,11 @@ class FakeHypervisor(object):
 
 
 class FakeStack(object):
-    def __init__(self, id, name, description=None, status='CREATE_COMPLETE'):
+    def __init__(self, id, name, description=None, status='CREATE_COMPLETE',
+                 outputs=[]):
         self.id = id
         self.name = name
         self.stack_name = name
         self.stack_description = description
         self.stack_status = status
+        self.outputs = outputs
diff --git a/shade/tests/unit/test_stack.py b/shade/tests/unit/test_stack.py
index 2882042..0a1e452 100644
--- a/shade/tests/unit/test_stack.py
+++ b/shade/tests/unit/test_stack.py
@@ -153,3 +153,15 @@ class TestStack(base.TestCase):
         self.assertEqual(stack.stack_name, res['stack_name'])
         self.assertEqual(stack.stack_name, res['name'])
         self.assertEqual(stack.stack_status, res['stack_status'])
+
+    @mock.patch.object(shade.OpenStackCloud, 'heat_client')
+    def test_get_stack_outputs(self, mock_heat):
+        outputs = [
+            {'output_key': 'id', 'output_value': '42'},
+            {'output_key': 'ip', 'output_value': '192.168.0.1'},
+        ]
+        stack = fakes.FakeStack('azerty', 'stack', outputs=outputs)
+        mock_heat.stacks.get.return_value = stack
+        stack = self.cloud.get_stack_outputs('stack')
+        self.assertIsNotNone(stack)
+        self.assertEqual(stack.outputs, outputs)
-- 
2.4.10

