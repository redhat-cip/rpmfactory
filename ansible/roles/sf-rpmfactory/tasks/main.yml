---

# Copy tool to store secret in Credential Binding
- name: Copy tool to store secret in Credential Binding
  copy: src=../../../../tools/cb-add-get.py dest=/usr/local/bin/cb-add-get.py mode=0755
  tags:
    - rpmf_koji_cert

# Copy Koji client certificate into the node
- name: Copy koji client certificate into the node
  copy: src={{ koji_client_cert_path }} dest=/etc/jenkins-koji.tgz
  tags:
    - rpmf_koji_cert

# Install Koji client cert in Credential Binding
- name: Check Koji client cert exists in Credential Binding
  shell: cb-add-get.py {{ fqdn }} admin:{{ admin_password }} get kojiclientcreds
  register: cb_check_result
  ignore_errors: True
  tags:
    - rpmf_koji_cert
- name: Install Koji client cert in Credential Binding
  shell: cb-add-get.py {{ fqdn }} admin:{{ admin_password }} add /etc/jenkins-koji.tgz kojiclientcreds
  when: cb_check_result.rc != 0
  tags:
    - rpmf_koji_cert

# Create rpmfbender user
- name: Check bender service user already registered
  shell: "sfmanager --url http://{{ fqdn }} --auth {{ bender_name }}:{{ bender_password }} user update --username {{ bender_name }} --password {{ bender_password  }}"
  register: bender_check_result
  ignore_errors: True
  tags:
    - rpmf_service_user
- name: Add bender service user in local backend
  shell: "sfmanager --url http://{{ fqdn }} --auth admin:{{ admin_password }} user create --username {{ bender_name }} --password {{ bender_password  }} --email '{{ bender_email_name }}@{{ fqdn }}' --fullname 'Bender RPM Factory' --ssh-key /root/sf-bootstrap-data/ssh_keys/jenkins_rsa"
  when: bender_check_result.rc != 0
  tags:
    - rpmf_service_user
- name: Activate bender service user (force cauth to register the user)
  shell: "sfmanager --url http://{{ fqdn }} --auth {{ bender_name }}:{{ bender_password }} user update --username {{ bender_name }} --password {{ bender_password  }}"
  when: bender_check_result.rc != 0
  tags:
    - rpmf_service_user

# Create and maintain updated gating_scripts repo
- include: project_create.yaml project=gating_scripts
  tags:
    - rpmf_install_gating_base
- copy: src=../files/gating/ dest=build-gating_scripts/
  tags:
    - rpmf_install_gating_base
- template: src=../templates/rpm-koji-gating-lib.rc.j2 dest=build-gating_scripts/rpm-koji-gating-lib.rc
  tags:
    - rpmf_install_gating_base
- name: Set execution bit
  file: path={{ item }} mode=0755
  with_items:
    - build-gating_scripts/pkg-export.sh
    - build-gating_scripts/pkg-validate.sh
    - build-gating_scripts/build-release-rpm.sh
  tags:
    - rpmf_install_gating_base
- name: Add rpmfactory gating scripts
  shell: chdir=build-gating_scripts {{ item }}
  with_items:
    - "test -n \"$(git ls-files -o -m --exclude-standard)\" && git add -A . && git commit -m 'Update gating scripts' || true"
    - "git push -f gerrit"
  tags:
    - rpmf_install_gating_base

# Push rpmfactory jjb in the config repo
- name: Reset local config repo
  shell: chdir=config {{ item }}
  with_items:
    - "git fetch --all"
    - "git reset --hard origin/master --"
    - "git clean -f -d"
  tags:
    - rpmf_install_jjb_base
    - rpmf_install_nodepool_base
- template: src=../templates/rpmfactory.yaml.j2 dest=config/jobs/rpmfactory.yaml
  tags:
    - rpmf_install_jjb_base
- template: src=../templates/rpmfactory-base.sh.j2 dest=config/nodepool/rpmfactory-base.sh
  tags:
    - rpmf_install_nodepool_base
- name: Add jobs to local config repo
  shell: chdir=config {{ item }}
  with_items:
    - "test -n \"$(git ls-files -o -m --exclude-standard)\" && git add -A . && git commit -m 'Add rpmfactory base builder and nodepool base' || true"
  tags:
    - rpmf_install_jjb_base
    - rpmf_install_nodepool_base
- name: Check for a gating script update
  command: chdir=config git diff HEAD origin/master
  register: diff
  tags:
    - rpmf_install_jjb_base
    - rpmf_install_nodepool_base
- name: Submit jobs to config repo and wait for validation before submition
  when: diff.stdout != ''
  shell: chdir=config submit_and_wait.py --approve
  tags:
    - rpmf_install_jjb_base
    - rpmf_install_nodepool_base
