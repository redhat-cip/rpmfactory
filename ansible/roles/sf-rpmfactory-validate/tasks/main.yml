---

# Prepare nodepool conf and build rpmfactory base image
- include: "sfconfig.yml"
- include: "configrepo.yml"
- include: "wait.yml"

# Workaround to wait for hieraedit to land in SF
- name: Copy modified version of hieraedit.py (temp)
  copy: src=../files/hieraedit.py dest=/usr/local/bin/

# Create a project p1 (mirror) and p1-distgit (distgit)
- include: project_create.yaml project=p1
- name: Reset p1
  command: chdir=config {{ item }}
  with_items:
    - git fetch --all
    - git reset --hard origin/master --

- include: project_create.yaml project=p1-distgit
- name: Reset p1-distgit
  command: chdir=config {{ item }}
  with_items:
    - git fetch --all
    - git reset --hard origin/master --

- name: Populate p1 with a fake RPM .spec file
  copy: src=../files/p1.spec dest=build-p1-distgit/
- name: Direct submit p1-distgit change
  shell: chdir=build-p1-distgit {{ item }}
  with_items:
    - "git review -s"
    - "test -n \"$(git ls-files -o -m --exclude-standard)\" && git add -A . && git commit -m 'Add default .spec file' || true"
    - "git push -f gerrit"

- name: Clean previous job to be triggered for p1
  command: hieraedit.py --yaml config/zuul/projects.yaml --delete name projects p1

- name: Configure job to be triggered for p1
  command: >
    hieraedit.py --yaml config/zuul/projects.yaml --append --eval projects \
        "{'name': 'p1',
           'check': ['tox-validate',],
        }"

- name: Clean previous job to be triggered for p1-distgit
  command: hieraedit.py --yaml config/zuul/projects.yaml --delete name projects p1-distgit

- name: Configure job to be triggered for p1-distgit
  command: >
    hieraedit.py --yaml config/zuul/projects.yaml --append --eval projects \
        "{'name': 'p1-distgit',
           'check': ['pkg-validate',],
           'gate': ['pkg-validate', 'pkg-export'],
        }"

- name: Commit config repo changes
  shell: chdir=config  {{ item }}
  with_items:
      - "test -n \"$(git ls-files -o -m --exclude-standard)\" && git add -A . && git commit -m 'Adds Zuul config for project p1 and p1-distgit' || true"

- name: Check for a change in local config repo
  command: chdir=config git diff HEAD origin/master
  register: diff
- name: Submit jobs to config repo and wait for validation before submition
  when: diff.stdout != ''
  shell: chdir=config submit_and_wait.py --approve
